<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EcoleDataSet" targetNamespace="http://tempuri.org/EcoleDataSet.xsd" xmlns:mstns="http://tempuri.org/EcoleDataSet.xsd" xmlns="http://tempuri.org/EcoleDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="EcoleConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EcoleConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ECOLE_CRM.Properties.Settings.GlobalReference.Default.EcoleConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CoursTableAdapter" GeneratorDataComponentClassName="CoursTableAdapter" Name="Cours" UserDataComponentName="CoursTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Cours] WHERE (([idCours] = @Original_idCours) AND ((@IsNull_Titre = 1 AND [Titre] IS NULL) OR ([Titre] = @Original_Titre)) AND ((@IsNull_numProf = 1 AND [numProf] IS NULL) OR ([numProf] = @Original_numProf)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_idCours" ColumnName="idCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_idCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idCours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IsNull_Titre" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IsNull_Titre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Titre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Original_Titre" ColumnName="Titre" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@Original_Titre" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Titre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IsNull_numProf" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IsNull_numProf" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="numProf" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Original_numProf" ColumnName="numProf" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numProf" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numProf" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Cours] ([Titre], [numProf]) VALUES (@Titre, @numProf);SELECT idCours, Titre, numProf FROM Cours WHERE (idCours = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Titre" ColumnName="Titre" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@Titre" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Titre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="numProf" ColumnName="numProf" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numProf" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numProf" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT C.idCours, C.Titre, C.numProf, P.nom, P.prénom
FROM dbo.Cours C JOIN dbo.Prof P ON C.numProf = P.idProf </CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       Cours
SET                Titre = @Titre, numProf = @numProf
WHERE        (idCours = @Original_idCours) AND (@IsNull_Titre = 1) AND (Titre IS NULL) AND (@IsNull_numProf = 1) AND (numProf IS NULL) OR
                         (idCours = @Original_idCours) AND (Titre = @Original_Titre) AND (@IsNull_numProf = 1) AND (numProf IS NULL) OR
                         (idCours = @Original_idCours) AND (@IsNull_Titre = 1) AND (Titre IS NULL) AND (numProf = @Original_numProf) OR
                         (idCours = @Original_idCours) AND (Titre = @Original_Titre) AND (numProf = @Original_numProf)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Titre" ColumnName="Titre" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@Titre" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Titre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="numProf" ColumnName="numProf" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numProf" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numProf" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_idCours" ColumnName="idCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_idCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idCours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IsNull_Titre" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IsNull_Titre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Titre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IsNull_numProf" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IsNull_numProf" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="numProf" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Original_Titre" ColumnName="Titre" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@Original_Titre" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Titre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Original_numProf" ColumnName="numProf" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numProf" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numProf" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idCours" DataSetColumn="idCours" />
              <Mapping SourceColumn="Titre" DataSetColumn="Titre" />
              <Mapping SourceColumn="numProf" DataSetColumn="numProf" />
              <Mapping SourceColumn="nom" DataSetColumn="nom" />
              <Mapping SourceColumn="prénom" DataSetColumn="prénom" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByCoursTitre" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByCoursTitre" GeneratorSourceName="FillByCoursTitre" GetMethodModifier="Public" GetMethodName="GetDataByCoursTitre" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByCoursTitre" UserSourceName="FillByCoursTitre">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT C.idCours, C.Titre, C.numProf, P.nom, P.prénom
FROM dbo.Cours C JOIN dbo.Prof P
ON C.numProf = P.idProf
WHERE C.Titre = @Titre</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Titre" ColumnName="Titre" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@Titre" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Titre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByEtudiantId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByEtudiantId" GeneratorSourceName="FillByEtudiantId" GetMethodModifier="Public" GetMethodName="GetDataByEtudiantId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByEtudiantId" UserSourceName="FillByEtudiantId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT C.idCours, C.Titre, C.numProf, P.nom, P.prénom
FROM (dbo.Cours C JOIN dbo.Prof P ON C.numProf = P.idProf)
JOIN dbo.Inscription I ON I.numCours = C.idCours
WHERE numEtud = @numEtud</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="numEtud" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByProfId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByProfId" GeneratorSourceName="FillByProfId" GetMethodModifier="Public" GetMethodName="GetDataByProfId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByProfId" UserSourceName="FillByProfId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT C.idCours, C.Titre, P.idProf, C.numProf, P.nom, P.prénom
FROM dbo.Cours C JOIN dbo.Prof P
ON C.numProf = P.idProf
WHERE P.idProf = @idProf</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idProf" ColumnName="idProf" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Prof" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idProf" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idProf" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByProfNom" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByProfNom" GeneratorSourceName="FillByProfNom" GetMethodModifier="Public" GetMethodName="GetDataByProfNom" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByProfNom" UserSourceName="FillByProfNom">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT C.idCours, C.Titre, C.numProf, P.nom, P.prénom
FROM dbo.Cours C JOIN dbo.Prof P
ON C.numProf = P.idProf</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EtudiantTableAdapter" GeneratorDataComponentClassName="EtudiantTableAdapter" Name="Etudiant" UserDataComponentName="EtudiantTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectName="dbo.Etudiant" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Etudiant] WHERE (([idEtud] = @Original_idEtud) AND ((@IsNull_nom = 1 AND [nom] IS NULL) OR ([nom] = @Original_nom)) AND ((@IsNull_prénom = 1 AND [prénom] IS NULL) OR ([prénom] = @Original_prénom)) AND ((@IsNull_ddn = 1 AND [ddn] IS NULL) OR ([ddn] = @Original_ddn)) AND ((@IsNull_adr = 1 AND [adr] IS NULL) OR ([adr] = @Original_adr)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idEtud" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idEtud" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_prénom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prénom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_prénom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prénom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ddn" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ddn" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_ddn" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ddn" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_adr" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="adr" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_adr" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="adr" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Etudiant] ([nom], [prénom], [ddn], [adr]) VALUES (@nom, @prénom, @ddn, @adr);
SELECT idEtud, nom, prénom, ddn, adr FROM Etudiant WHERE (idEtud = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@prénom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prénom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@ddn" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ddn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@adr" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="adr" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idEtud, nom, prénom, ddn, adr FROM dbo.Etudiant</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Etudiant] SET [nom] = @nom, [prénom] = @prénom, [ddn] = @ddn, [adr] = @adr WHERE (([idEtud] = @Original_idEtud) AND ((@IsNull_nom = 1 AND [nom] IS NULL) OR ([nom] = @Original_nom)) AND ((@IsNull_prénom = 1 AND [prénom] IS NULL) OR ([prénom] = @Original_prénom)) AND ((@IsNull_ddn = 1 AND [ddn] IS NULL) OR ([ddn] = @Original_ddn)) AND ((@IsNull_adr = 1 AND [adr] IS NULL) OR ([adr] = @Original_adr)));
SELECT idEtud, nom, prénom, ddn, adr FROM Etudiant WHERE (idEtud = @idEtud)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@prénom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prénom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@ddn" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ddn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@adr" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="adr" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idEtud" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idEtud" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_prénom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prénom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_prénom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prénom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ddn" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ddn" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_ddn" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ddn" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_adr" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="adr" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_adr" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="adr" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idEtud" ColumnName="idEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Etudiant" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idEtud" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idEtud" DataSetColumn="idEtud" />
              <Mapping SourceColumn="nom" DataSetColumn="nom" />
              <Mapping SourceColumn="prénom" DataSetColumn="prénom" />
              <Mapping SourceColumn="ddn" DataSetColumn="ddn" />
              <Mapping SourceColumn="adr" DataSetColumn="adr" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectName="dbo.Etudiant" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByCoursTitre" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByCoursTitre" GeneratorSourceName="FillByCoursTitre" GetMethodModifier="Public" GetMethodName="GetDataByCoursTitre" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByCoursTitre" UserSourceName="FillByCoursTitre">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT E.adr, E.ddn, E.idEtud, E.nom, E.prénom 
FROM Cours AS C INNER JOIN Inscription AS I ON I.numCours = C.idCours 
INNER JOIN Etudiant AS E ON E.idEtud = I.numEtud WHERE (C.Titre = @Titre)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Titre" ColumnName="Titre" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@Titre" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Titre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectName="dbo.Etudiant" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByEtudiantId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByEtudiantId" GeneratorSourceName="FillByEtudiantId" GetMethodModifier="Public" GetMethodName="GetDataByEtudiantId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByEtudiantId" UserSourceName="FillByEtudiantId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT adr, ddn, idEtud, nom, prénom FROM Etudiant WHERE (idEtud = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="idEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Etudiant" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idEtud" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectName="dbo.Etudiant" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByNomOrPrenom" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByNomOrPrenom" GeneratorSourceName="FillByNomOrPrenom" GetMethodModifier="Public" GetMethodName="GetDataByNomOrPrenom" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByNomOrPrenom" UserSourceName="FillByNomOrPrenom">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT adr, ddn, idEtud, nom, prénom FROM Etudiant WHERE (nom = @nom) OR (prénom = @prénom)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="nom" ColumnName="nom" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Etudiant" DataTypeServer="varchar(25)" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="25" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="prénom" ColumnName="prénom" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Etudiant" DataTypeServer="varchar(15)" DbType="AnsiString" Direction="Input" ParameterName="@prénom" Precision="0" ProviderType="VarChar" Scale="0" Size="15" SourceColumn="prénom" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectName="dbo.Etudiant" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByProfIdCoursId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByProfIdCoursId" GeneratorSourceName="FillByProfIdCoursId" GetMethodModifier="Public" GetMethodName="GetDataByProfIdCoursId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByProfIdCoursId" UserSourceName="FillByProfIdCoursId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT E.adr, E.ddn, E.idEtud, E.nom, E.prénom FROM Etudiant AS E INNER JOIN Inscription AS I ON I.numEtud = E.idEtud INNER JOIN Cours AS C ON C.idCours = I.numCours INNER JOIN Prof AS P ON P.idProf = C.numProf WHERE (P.idProf = @idProf) AND (C.idCours = @idCours)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idProf" ColumnName="idProf" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Prof" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idProf" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idProf" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idCours" ColumnName="idCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Cours" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idCours" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InscriptionTableAdapter" GeneratorDataComponentClassName="InscriptionTableAdapter" Name="Inscription" UserDataComponentName="InscriptionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectName="dbo.Inscription" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Inscription] WHERE (([numCours] = @Original_numCours) AND ([numEtud] = @Original_numEtud) AND ([année] = @Original_année))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_numCours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="numCours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_numEtud" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_année" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Inscription] ([numCours], [numEtud], [année]) VALUES (@numCours, @numEtud, @année);
SELECT numCours, numEtud, année FROM Inscription WHERE (année = @année) AND (numCours = @numCours) AND (numEtud = @numEtud)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@numCours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="numCours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@numEtud" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@année" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT numCours, numEtud, année FROM dbo.Inscription</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       Inscription
SET                numCours = @numCours, numEtud = @numEtud, année = @année
WHERE        (numCours = @Original_numCours) AND (numEtud = @Original_numEtud) AND (année = @Original_année); 
SELECT numCours, numEtud, année FROM Inscription WHERE (année = @année) AND (numCours = @numCours) AND (numEtud = @numEtud)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="numCours" ColumnName="numCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numCours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="numEtud" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="année" ColumnName="année" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@année" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_numCours" ColumnName="numCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numCours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_numEtud" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_année" ColumnName="année" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@Original_année" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="numCours" DataSetColumn="numCours" />
              <Mapping SourceColumn="numEtud" DataSetColumn="numEtud" />
              <Mapping SourceColumn="année" DataSetColumn="année" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProfTableAdapter" GeneratorDataComponentClassName="ProfTableAdapter" Name="Prof" UserDataComponentName="ProfTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectName="dbo.Prof" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Prof] WHERE (([idProf] = @Original_idProf) AND ((@IsNull_nom = 1 AND [nom] IS NULL) OR ([nom] = @Original_nom)) AND ((@IsNull_prénom = 1 AND [prénom] IS NULL) OR ([prénom] = @Original_prénom)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idProf" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idProf" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_prénom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prénom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_prénom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prénom" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Prof] ([nom], [prénom]) VALUES (@nom, @prénom);
SELECT idProf, nom, prénom FROM Prof WHERE (idProf = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@prénom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="prénom" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idProf, nom, prénom FROM dbo.Prof</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       Prof
SET                nom = @nom, prénom =
WHERE        (idProf = @Original_numProf) AND (@IsNull_nom = 1) AND (nom IS NULL) AND (@IsNull_prénom = 1) AND (prénom IS NULL) OR
                         (idProf = @Original_numProf) AND (nom = @Original_nom) AND (@IsNull_prénom = 1) AND (prénom IS NULL) OR
                         (idProf = @Original_numProf) AND (@IsNull_nom = 1) AND (nom IS NULL) AND (prénom = @Original_prénom) OR
                         (idProf = @Original_numProf) AND (nom = @Original_nom) AND (prénom = @Original_prénom); 
SELECT idProf, nom, prénom FROM Prof WHERE (idProf = @idProf)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="nom" ColumnName="nom" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Prof" DataTypeServer="varchar(25)" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="25" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_numProf" ColumnName="idProf" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Prof" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numProf" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idProf" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IsNull_nom" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IsNull_nom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IsNull_prénom" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IsNull_prénom" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="prénom" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Original_nom" ColumnName="nom" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Prof" DataTypeServer="varchar(25)" DbType="AnsiString" Direction="Input" ParameterName="@Original_nom" Precision="0" ProviderType="VarChar" Scale="0" Size="25" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Original_prénom" ColumnName="prénom" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Prof" DataTypeServer="varchar(15)" DbType="AnsiString" Direction="Input" ParameterName="@Original_prénom" Precision="0" ProviderType="VarChar" Scale="0" Size="15" SourceColumn="prénom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idProf" ColumnName="idProf" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Prof" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idProf" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idProf" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idProf" DataSetColumn="idProf" />
              <Mapping SourceColumn="nom" DataSetColumn="nom" />
              <Mapping SourceColumn="prénom" DataSetColumn="prénom" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectName="dbo.Prof" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByNomOrPrenom" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByNomOrPrenom" GeneratorSourceName="FillByNomOrPrenom" GetMethodModifier="Public" GetMethodName="GetDataByNomOrPrenom" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByNomOrPrenom" UserSourceName="FillByNomOrPrenom">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT P.idProf, P.nom, P.prénom
FROM dbo.Prof P
WHERE (P.nom = @nom) OR (P.prénom = @prénom)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="nom" ColumnName="nom" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Prof" DataTypeServer="varchar(25)" DbType="AnsiString" Direction="Input" ParameterName="@nom" Precision="0" ProviderType="VarChar" Scale="0" Size="25" SourceColumn="nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="prénom" ColumnName="prénom" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Prof" DataTypeServer="varchar(15)" DbType="AnsiString" Direction="Input" ParameterName="@prénom" Precision="0" ProviderType="VarChar" Scale="0" Size="15" SourceColumn="prénom" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InscriptionCoursProfEtudiantTableAdapter" GeneratorDataComponentClassName="InscriptionCoursProfEtudiantTableAdapter" Name="InscriptionCoursProfEtudiant" UserDataComponentName="InscriptionCoursProfEtudiantTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT C.idCours, C.Titre, P.idProf, P.nom, P.prénom, E.idEtud, E.nom, E.prénom
FROM ((dbo.Inscription I JOIN dbo.Cours C ON I.numCours = C.idCours) 
JOIN dbo.Prof P ON C.numProf = P.idProf)
JOIN Etudiant E ON E.idEtud = I.numEtud
WHERE I.numEtud = @numE</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="numE" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numE" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idCours" DataSetColumn="idCours" />
              <Mapping SourceColumn="Titre" DataSetColumn="Titre" />
              <Mapping SourceColumn="idProf" DataSetColumn="idProf" />
              <Mapping SourceColumn="nom" DataSetColumn="nomProf" />
              <Mapping SourceColumn="prénom" DataSetColumn="prénomProf" />
              <Mapping SourceColumn="idEtud" DataSetColumn="idEtud" />
              <Mapping SourceColumn="nom1" DataSetColumn="nomEtudiant" />
              <Mapping SourceColumn="prénom1" DataSetColumn="prénomEtudiant" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByDefault" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByDefault" GeneratorSourceName="FillByDefault" GetMethodModifier="Public" GetMethodName="GetDataByDefault" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByDefault" UserSourceName="FillByDefault">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT C.idCours, C.Titre, P.idProf, P.nom, P.prénom, E.idEtud, E.nom, E.prénom
FROM ((dbo.Inscription I JOIN dbo.Cours C ON I.numCours = C.idCours) 
JOIN dbo.Prof P ON C.numProf = P.idProf)
JOIN Etudiant E ON E.idEtud = I.numEtud</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByEtudiantCoursNonInscrit" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByEtudiantCoursNonInscrit" GeneratorSourceName="FillByEtudiantCoursNonInscrit" GetMethodModifier="Public" GetMethodName="GetDataByEtudiantCoursNonInscrit" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByEtudiantCoursNonInscrit" UserSourceName="FillByEtudiantCoursNonInscrit">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT C.idCours, C.Titre, P.idProf, P.nom, P.prénom, E.idEtud, E.nom, E.prénom
FROM ((dbo.Inscription I JOIN dbo.Cours C ON I.numCours = C.idCours) 
JOIN dbo.Prof P ON C.numProf = P.idProf)
JOIN Etudiant E ON E.idEtud = I.numEtud
WHERE C.idCours NOT IN
(SELECT C2.idCours FROM Cours C2 JOIN Inscription I2 ON I2.numCours = C2.idCours
WHERE I2.numEtud = @numE)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="numE" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numE" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EtudiantCoursInscritTableAdapter" GeneratorDataComponentClassName="EtudiantCoursInscritTableAdapter" Name="EtudiantCoursInscrit" UserDataComponentName="EtudiantCoursInscritTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Inscription] WHERE (([numCours] = @Original_numCours) AND ([numEtud] = @Original_numEtud) AND ([année] = @Original_année))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_numCours" ColumnName="numCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numCours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_numEtud" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_année" ColumnName="année" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@Original_année" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Inscription] ([numCours], [numEtud], [année]) VALUES (@numCours, @numEtud, @année);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="numCours" ColumnName="numCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numCours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="numEtud" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="année" ColumnName="année" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@année" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT C.idCours,C.Titre, P.prénom, P.nom, I.numEtud, I.année FROM
(Cours C JOIN Inscription I ON I.numCours = C.idCours)
JOIN PROF P ON P.idProf = C.numProf
WHERE I.numEtud = @idEtud AND I.année = @year</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idEtud" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="year" ColumnName="année" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@year" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Inscription] SET [numCours] = @numCours, [numEtud] = @numEtud, [année] = @année WHERE (([numCours] = @Original_numCours) AND ([numEtud] = @Original_numEtud) AND ([année] = @Original_année));</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="numCours" ColumnName="numCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numCours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="numEtud" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="année" ColumnName="année" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@année" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_numCours" ColumnName="numCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numCours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_numEtud" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_année" ColumnName="année" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@Original_année" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idCours" DataSetColumn="idCours" />
              <Mapping SourceColumn="Titre" DataSetColumn="Titre" />
              <Mapping SourceColumn="prénom" DataSetColumn="prénom" />
              <Mapping SourceColumn="nom" DataSetColumn="nom" />
              <Mapping SourceColumn="numEtud" DataSetColumn="numEtud" />
              <Mapping SourceColumn="année" DataSetColumn="année" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EtudiantCoursNonInscritTableAdapter" GeneratorDataComponentClassName="EtudiantCoursNonInscritTableAdapter" Name="EtudiantCoursNonInscrit" UserDataComponentName="EtudiantCoursNonInscritTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Inscription] WHERE (([numCours] = @Original_numCours) AND ([numEtud] = @Original_numEtud) AND ([année] = @Original_année))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_numCours" ColumnName="numCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numCours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_numEtud" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_année" ColumnName="année" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@Original_année" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Inscription] ([numCours], [numEtud], [année]) VALUES (@numCours, @numEtud, @année);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="numCours" ColumnName="numCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numCours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="numEtud" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="année" ColumnName="année" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@année" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT C.idCours,C.Titre, P.prénom, P.nom, I.numEtud, I.année FROM
(Cours C JOIN Inscription I ON I.numCours = C.idCours)
JOIN PROF P ON P.idProf = C.numProf
WHERE C.idCours NOT IN 
(SELECT C2.idCours FROM Cours C2 
JOIN Inscription I2 ON I2.numCours = C2.idCours
WHERE I2.numEtud = @idEtud AND I2.année = @year)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idEtud" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idEtud" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="year" ColumnName="" DataSourceName="" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@year" Precision="0" Scale="0" Size="10" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[Inscription] SET [numCours] = @numCours, [numEtud] = @numEtud, [année] = @année WHERE (([numCours] = @Original_numCours) AND ([numEtud] = @Original_numEtud) AND ([année] = @Original_année));</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="numCours" ColumnName="numCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numCours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="numEtud" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@numEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="année" ColumnName="année" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@année" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_numCours" ColumnName="numCours" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numCours" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numCours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_numEtud" ColumnName="numEtud" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_numEtud" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="numEtud" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_année" ColumnName="année" DataSourceName="[C:\LAOG\AUTOINC\ECOLE.MDF].dbo.Inscription" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@Original_année" Precision="0" ProviderType="NChar" Scale="0" Size="10" SourceColumn="année" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idCours" DataSetColumn="idCours" />
              <Mapping SourceColumn="Titre" DataSetColumn="Titre" />
              <Mapping SourceColumn="prénom" DataSetColumn="prénom" />
              <Mapping SourceColumn="nom" DataSetColumn="nom" />
              <Mapping SourceColumn="numEtud" DataSetColumn="numEtud" />
              <Mapping SourceColumn="année" DataSetColumn="année" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EcoleConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByCoursDisponibles" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByCoursDisponible" GeneratorSourceName="FillByCoursDisponibles" GetMethodModifier="Public" GetMethodName="GetDataByCoursDisponible" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByCoursDisponible" UserSourceName="FillByCoursDisponibles">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT C.idCours,C.Titre, P.prénom, P.nom FROM
Cours C JOIN PROF P ON P.idProf = C.numProf
WHERE C.idCours NOT IN 
(SELECT C2.idCours FROM Cours C2 
JOIN Inscription I2 ON I2.numCours = C2.idCours
WHERE I2.numEtud = @idEtud AND I2.année = @year)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="idEtud" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idEtud" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="year" ColumnName="" DataSourceName="" DataTypeServer="nchar(10)" DbType="String" Direction="Input" ParameterName="@year" Precision="0" Scale="0" Size="10" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EcoleDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="EcoleDataSet" msprop:Generator_DataSetName="EcoleDataSet" msprop:EnableTableAdapterManager="True">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Cours" msprop:Generator_UserTableName="Cours" msprop:Generator_RowDeletedName="CoursRowDeleted" msprop:Generator_RowChangedName="CoursRowChanged" msprop:Generator_RowClassName="CoursRow" msprop:Generator_RowChangingName="CoursRowChanging" msprop:Generator_RowEvArgName="CoursRowChangeEvent" msprop:Generator_RowEvHandlerName="CoursRowChangeEventHandler" msprop:Generator_TableClassName="CoursDataTable" msprop:Generator_TableVarName="tableCours" msprop:Generator_RowDeletingName="CoursRowDeleting" msprop:Generator_TablePropName="Cours">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idCours" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="idCours" msprop:Generator_ColumnVarNameInTable="columnidCours" msprop:Generator_ColumnPropNameInRow="idCours" msprop:Generator_ColumnPropNameInTable="idCoursColumn" type="xs:int" />
              <xs:element name="Titre" msprop:Generator_UserColumnName="Titre" msprop:Generator_ColumnVarNameInTable="columnTitre" msprop:Generator_ColumnPropNameInRow="Titre" msprop:Generator_ColumnPropNameInTable="TitreColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="numProf" msprop:Generator_UserColumnName="numProf" msprop:Generator_ColumnVarNameInTable="columnnumProf" msprop:Generator_ColumnPropNameInRow="numProf" msprop:Generator_ColumnPropNameInTable="numProfColumn" type="xs:int" minOccurs="0" />
              <xs:element name="nom" msprop:Generator_UserColumnName="nom" msprop:Generator_ColumnPropNameInRow="nom" msprop:Generator_ColumnVarNameInTable="columnnom" msprop:Generator_ColumnPropNameInTable="nomColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="prénom" msprop:Generator_UserColumnName="prénom" msprop:Generator_ColumnPropNameInRow="prénom" msprop:Generator_ColumnVarNameInTable="columnprénom" msprop:Generator_ColumnPropNameInTable="prénomColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Etudiant" msprop:Generator_UserTableName="Etudiant" msprop:Generator_RowDeletedName="EtudiantRowDeleted" msprop:Generator_RowChangedName="EtudiantRowChanged" msprop:Generator_RowClassName="EtudiantRow" msprop:Generator_RowChangingName="EtudiantRowChanging" msprop:Generator_RowEvArgName="EtudiantRowChangeEvent" msprop:Generator_RowEvHandlerName="EtudiantRowChangeEventHandler" msprop:Generator_TableClassName="EtudiantDataTable" msprop:Generator_TableVarName="tableEtudiant" msprop:Generator_RowDeletingName="EtudiantRowDeleting" msprop:Generator_TablePropName="Etudiant">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idEtud" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="idEtud" msprop:Generator_ColumnVarNameInTable="columnidEtud" msprop:Generator_ColumnPropNameInRow="idEtud" msprop:Generator_ColumnPropNameInTable="idEtudColumn" type="xs:int" />
              <xs:element name="nom" msprop:Generator_UserColumnName="nom" msprop:Generator_ColumnVarNameInTable="columnnom" msprop:Generator_ColumnPropNameInRow="nom" msprop:Generator_ColumnPropNameInTable="nomColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="prénom" msprop:Generator_UserColumnName="prénom" msprop:Generator_ColumnVarNameInTable="columnprénom" msprop:Generator_ColumnPropNameInRow="prénom" msprop:Generator_ColumnPropNameInTable="prénomColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ddn" msprop:Generator_UserColumnName="ddn" msprop:Generator_ColumnVarNameInTable="columnddn" msprop:Generator_ColumnPropNameInRow="ddn" msprop:Generator_ColumnPropNameInTable="ddnColumn" type="xs:dateTime" minOccurs="0" />
              <xs:element name="adr" msprop:Generator_UserColumnName="adr" msprop:Generator_ColumnVarNameInTable="columnadr" msprop:Generator_ColumnPropNameInRow="adr" msprop:Generator_ColumnPropNameInTable="adrColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Inscription" msprop:Generator_UserTableName="Inscription" msprop:Generator_RowDeletedName="InscriptionRowDeleted" msprop:Generator_RowChangedName="InscriptionRowChanged" msprop:Generator_RowClassName="InscriptionRow" msprop:Generator_RowChangingName="InscriptionRowChanging" msprop:Generator_RowEvArgName="InscriptionRowChangeEvent" msprop:Generator_RowEvHandlerName="InscriptionRowChangeEventHandler" msprop:Generator_TableClassName="InscriptionDataTable" msprop:Generator_TableVarName="tableInscription" msprop:Generator_RowDeletingName="InscriptionRowDeleting" msprop:Generator_TablePropName="Inscription">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="numCours" msprop:Generator_UserColumnName="numCours" msprop:Generator_ColumnVarNameInTable="columnnumCours" msprop:Generator_ColumnPropNameInRow="numCours" msprop:Generator_ColumnPropNameInTable="numCoursColumn" type="xs:int" />
              <xs:element name="numEtud" msprop:Generator_UserColumnName="numEtud" msprop:Generator_ColumnVarNameInTable="columnnumEtud" msprop:Generator_ColumnPropNameInRow="numEtud" msprop:Generator_ColumnPropNameInTable="numEtudColumn" type="xs:int" />
              <xs:element name="année" msprop:Generator_UserColumnName="année" msprop:Generator_ColumnVarNameInTable="columnannée" msprop:Generator_ColumnPropNameInRow="année" msprop:Generator_ColumnPropNameInTable="annéeColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Prof" msprop:Generator_UserTableName="Prof" msprop:Generator_RowDeletedName="ProfRowDeleted" msprop:Generator_RowChangedName="ProfRowChanged" msprop:Generator_RowClassName="ProfRow" msprop:Generator_RowChangingName="ProfRowChanging" msprop:Generator_RowEvArgName="ProfRowChangeEvent" msprop:Generator_RowEvHandlerName="ProfRowChangeEventHandler" msprop:Generator_TableClassName="ProfDataTable" msprop:Generator_TableVarName="tableProf" msprop:Generator_RowDeletingName="ProfRowDeleting" msprop:Generator_TablePropName="Prof">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idProf" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="idProf" msprop:Generator_ColumnVarNameInTable="columnidProf" msprop:Generator_ColumnPropNameInRow="idProf" msprop:Generator_ColumnPropNameInTable="idProfColumn" type="xs:int" />
              <xs:element name="nom" msprop:Generator_UserColumnName="nom" msprop:Generator_ColumnVarNameInTable="columnnom" msprop:Generator_ColumnPropNameInRow="nom" msprop:Generator_ColumnPropNameInTable="nomColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="prénom" msprop:Generator_UserColumnName="prénom" msprop:Generator_ColumnVarNameInTable="columnprénom" msprop:Generator_ColumnPropNameInRow="prénom" msprop:Generator_ColumnPropNameInTable="prénomColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="InscriptionCoursProfEtudiant" msprop:Generator_UserTableName="InscriptionCoursProfEtudiant" msprop:Generator_RowDeletedName="InscriptionCoursProfEtudiantRowDeleted" msprop:Generator_RowChangedName="InscriptionCoursProfEtudiantRowChanged" msprop:Generator_RowClassName="InscriptionCoursProfEtudiantRow" msprop:Generator_RowChangingName="InscriptionCoursProfEtudiantRowChanging" msprop:Generator_RowEvArgName="InscriptionCoursProfEtudiantRowChangeEvent" msprop:Generator_RowEvHandlerName="InscriptionCoursProfEtudiantRowChangeEventHandler" msprop:Generator_TableClassName="InscriptionCoursProfEtudiantDataTable" msprop:Generator_TableVarName="tableInscriptionCoursProfEtudiant" msprop:Generator_RowDeletingName="InscriptionCoursProfEtudiantRowDeleting" msprop:Generator_TablePropName="InscriptionCoursProfEtudiant">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idCours" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="idCours" msprop:Generator_ColumnVarNameInTable="columnidCours" msprop:Generator_ColumnPropNameInRow="idCours" msprop:Generator_ColumnPropNameInTable="idCoursColumn" type="xs:int" />
              <xs:element name="Titre" msprop:Generator_UserColumnName="Titre" msprop:Generator_ColumnVarNameInTable="columnTitre" msprop:Generator_ColumnPropNameInRow="Titre" msprop:Generator_ColumnPropNameInTable="TitreColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="idProf" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="idProf" msprop:Generator_ColumnVarNameInTable="columnidProf" msprop:Generator_ColumnPropNameInRow="idProf" msprop:Generator_ColumnPropNameInTable="idProfColumn" type="xs:int" />
              <xs:element name="nomProf" msprop:Generator_UserColumnName="nomProf" msprop:Generator_ColumnVarNameInTable="columnnomProf" msprop:Generator_ColumnPropNameInRow="nomProf" msprop:Generator_ColumnPropNameInTable="nomProfColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="prénomProf" msprop:Generator_UserColumnName="prénomProf" msprop:Generator_ColumnVarNameInTable="columnprénomProf" msprop:Generator_ColumnPropNameInRow="prénomProf" msprop:Generator_ColumnPropNameInTable="prénomProfColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="idEtud" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="idEtud" msprop:Generator_ColumnVarNameInTable="columnidEtud" msprop:Generator_ColumnPropNameInRow="idEtud" msprop:Generator_ColumnPropNameInTable="idEtudColumn" type="xs:int" />
              <xs:element name="nomEtudiant" msprop:Generator_UserColumnName="nomEtudiant" msprop:Generator_ColumnVarNameInTable="columnnomEtudiant" msprop:Generator_ColumnPropNameInRow="nomEtudiant" msprop:Generator_ColumnPropNameInTable="nomEtudiantColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="prénomEtudiant" msprop:Generator_UserColumnName="prénomEtudiant" msprop:Generator_ColumnVarNameInTable="columnprénomEtudiant" msprop:Generator_ColumnPropNameInRow="prénomEtudiant" msprop:Generator_ColumnPropNameInTable="prénomEtudiantColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="EtudiantCoursInscrit" msprop:Generator_UserTableName="EtudiantCoursInscrit" msprop:Generator_RowDeletedName="EtudiantCoursInscritRowDeleted" msprop:Generator_RowChangedName="EtudiantCoursInscritRowChanged" msprop:Generator_RowClassName="EtudiantCoursInscritRow" msprop:Generator_RowChangingName="EtudiantCoursInscritRowChanging" msprop:Generator_RowEvArgName="EtudiantCoursInscritRowChangeEvent" msprop:Generator_RowEvHandlerName="EtudiantCoursInscritRowChangeEventHandler" msprop:Generator_TableClassName="EtudiantCoursInscritDataTable" msprop:Generator_TableVarName="tableEtudiantCoursInscrit" msprop:Generator_RowDeletingName="EtudiantCoursInscritRowDeleting" msprop:Generator_TablePropName="EtudiantCoursInscrit">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idCours" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="idCours" msprop:Generator_ColumnPropNameInRow="idCours" msprop:Generator_ColumnVarNameInTable="columnidCours" msprop:Generator_ColumnPropNameInTable="idCoursColumn" type="xs:int" />
              <xs:element name="Titre" msprop:Generator_UserColumnName="Titre" msprop:Generator_ColumnPropNameInRow="Titre" msprop:Generator_ColumnVarNameInTable="columnTitre" msprop:Generator_ColumnPropNameInTable="TitreColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="prénom" msprop:Generator_UserColumnName="prénom" msprop:Generator_ColumnPropNameInRow="prénom" msprop:Generator_ColumnVarNameInTable="columnprénom" msprop:Generator_ColumnPropNameInTable="prénomColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="nom" msprop:Generator_UserColumnName="nom" msprop:Generator_ColumnPropNameInRow="nom" msprop:Generator_ColumnVarNameInTable="columnnom" msprop:Generator_ColumnPropNameInTable="nomColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="numEtud" msprop:Generator_UserColumnName="numEtud" msprop:Generator_ColumnPropNameInRow="numEtud" msprop:Generator_ColumnVarNameInTable="columnnumEtud" msprop:Generator_ColumnPropNameInTable="numEtudColumn" type="xs:int" />
              <xs:element name="année" msprop:Generator_UserColumnName="année" msprop:Generator_ColumnVarNameInTable="columnannée" msprop:Generator_ColumnPropNameInRow="année" msprop:Generator_ColumnPropNameInTable="annéeColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="EtudiantCoursNonInscrit" msprop:Generator_UserTableName="EtudiantCoursNonInscrit" msprop:Generator_RowDeletedName="EtudiantCoursNonInscritRowDeleted" msprop:Generator_RowChangedName="EtudiantCoursNonInscritRowChanged" msprop:Generator_RowClassName="EtudiantCoursNonInscritRow" msprop:Generator_RowChangingName="EtudiantCoursNonInscritRowChanging" msprop:Generator_RowEvArgName="EtudiantCoursNonInscritRowChangeEvent" msprop:Generator_RowEvHandlerName="EtudiantCoursNonInscritRowChangeEventHandler" msprop:Generator_TableClassName="EtudiantCoursNonInscritDataTable" msprop:Generator_TableVarName="tableEtudiantCoursNonInscrit" msprop:Generator_RowDeletingName="EtudiantCoursNonInscritRowDeleting" msprop:Generator_TablePropName="EtudiantCoursNonInscrit">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idCours" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="idCours" msprop:Generator_ColumnPropNameInRow="idCours" msprop:Generator_ColumnVarNameInTable="columnidCours" msprop:Generator_ColumnPropNameInTable="idCoursColumn" type="xs:int" />
              <xs:element name="Titre" msprop:Generator_UserColumnName="Titre" msprop:Generator_ColumnPropNameInRow="Titre" msprop:Generator_ColumnVarNameInTable="columnTitre" msprop:Generator_ColumnPropNameInTable="TitreColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="prénom" msprop:Generator_UserColumnName="prénom" msprop:Generator_ColumnPropNameInRow="prénom" msprop:Generator_ColumnVarNameInTable="columnprénom" msprop:Generator_ColumnPropNameInTable="prénomColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="nom" msprop:Generator_UserColumnName="nom" msprop:Generator_ColumnPropNameInRow="nom" msprop:Generator_ColumnVarNameInTable="columnnom" msprop:Generator_ColumnPropNameInTable="nomColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="numEtud" msprop:Generator_UserColumnName="numEtud" msprop:Generator_ColumnVarNameInTable="columnnumEtud" msprop:Generator_ColumnPropNameInRow="numEtud" msprop:Generator_ColumnPropNameInTable="numEtudColumn" type="xs:int" />
              <xs:element name="année" msprop:Generator_UserColumnName="année" msprop:Generator_ColumnVarNameInTable="columnannée" msprop:Generator_ColumnPropNameInRow="année" msprop:Generator_ColumnPropNameInTable="annéeColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Cours" />
      <xs:field xpath="mstns:idCours" />
    </xs:unique>
    <xs:unique name="Etudiant_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Etudiant" />
      <xs:field xpath="mstns:idEtud" />
    </xs:unique>
    <xs:unique name="Inscription_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Inscription" />
      <xs:field xpath="mstns:numCours" />
      <xs:field xpath="mstns:numEtud" />
      <xs:field xpath="mstns:année" />
    </xs:unique>
    <xs:unique name="Prof_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Prof" />
      <xs:field xpath="mstns:idProf" />
    </xs:unique>
    <xs:unique name="EtudiantCoursInscrit_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EtudiantCoursInscrit" />
      <xs:field xpath="mstns:idCours" />
    </xs:unique>
    <xs:unique name="EtudiantCoursNonInscrit_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EtudiantCoursNonInscrit" />
      <xs:field xpath="mstns:idCours" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Cours_Prof" msdata:parent="Prof" msdata:child="Cours" msdata:parentkey="idProf" msdata:childkey="numProf" msprop:Generator_UserRelationName="FK_Cours_Prof" msprop:Generator_RelationVarName="relationFK_Cours_Prof" msprop:Generator_UserChildTable="Cours" msprop:Generator_UserParentTable="Prof" msprop:Generator_ParentPropName="ProfRow" msprop:Generator_ChildPropName="GetCoursRows" />
      <msdata:Relationship name="FK_Inscription_Cours" msdata:parent="Cours" msdata:child="Inscription" msdata:parentkey="idCours" msdata:childkey="numCours" msprop:Generator_UserRelationName="FK_Inscription_Cours" msprop:Generator_RelationVarName="relationFK_Inscription_Cours" msprop:Generator_UserChildTable="Inscription" msprop:Generator_UserParentTable="Cours" msprop:Generator_ParentPropName="CoursRow" msprop:Generator_ChildPropName="GetInscriptionRows" />
      <msdata:Relationship name="FK_Inscription_Etudiant" msdata:parent="Etudiant" msdata:child="Inscription" msdata:parentkey="idEtud" msdata:childkey="numEtud" msprop:Generator_UserRelationName="FK_Inscription_Etudiant" msprop:Generator_RelationVarName="relationFK_Inscription_Etudiant" msprop:Generator_UserChildTable="Inscription" msprop:Generator_UserParentTable="Etudiant" msprop:Generator_ParentPropName="EtudiantRow" msprop:Generator_ChildPropName="GetInscriptionRows" />
      <msdata:Relationship name="FK_Inscription_Cours2" msdata:parent="InscriptionCoursProfEtudiant" msdata:child="Inscription" msdata:parentkey="idCours" msdata:childkey="numCours" msprop:Generator_UserRelationName="FK_Inscription_Cours2" msprop:Generator_RelationVarName="relationFK_Inscription_Cours2" msprop:Generator_UserChildTable="Inscription" msprop:Generator_UserParentTable="InscriptionCoursProfEtudiant" msprop:Generator_ParentPropName="InscriptionCoursProfEtudiantRow" msprop:Generator_ChildPropName="GetInscriptionRows" />
      <msdata:Relationship name="FK_Inscription_Cours1" msdata:parent="EtudiantCoursInscrit" msdata:child="Inscription" msdata:parentkey="idCours" msdata:childkey="numCours" msprop:Generator_UserRelationName="FK_Inscription_Cours1" msprop:Generator_RelationVarName="relationFK_Inscription_Cours1" msprop:Generator_UserChildTable="Inscription" msprop:Generator_UserParentTable="EtudiantCoursInscrit" msprop:Generator_ParentPropName="EtudiantCoursInscritRow" msprop:Generator_ChildPropName="GetInscriptionRows" />
      <msdata:Relationship name="FK_Inscription_Cours3" msdata:parent="EtudiantCoursNonInscrit" msdata:child="Inscription" msdata:parentkey="idCours" msdata:childkey="numCours" msprop:Generator_UserRelationName="FK_Inscription_Cours3" msprop:Generator_RelationVarName="relationFK_Inscription_Cours3" msprop:Generator_UserChildTable="Inscription" msprop:Generator_UserParentTable="EtudiantCoursNonInscrit" msprop:Generator_ParentPropName="EtudiantCoursNonInscritRow" msprop:Generator_ChildPropName="GetInscriptionRows" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>